// <auto-generated />
using System;
using CardBattle.DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace cardbattle.datamodels.migrations
{
    [DbContext(typeof(BattleSimulatorContext))]
    [Migration("20240905020636_AddMoreJoins")]
    partial class AddMoreJoins
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AbilityCard", b =>
                {
                    b.Property<int>("SummonerAbilitiesId")
                        .HasColumnType("int");

                    b.Property<int>("SummonerCardsId")
                        .HasColumnType("int");

                    b.HasKey("SummonerAbilitiesId", "SummonerCardsId");

                    b.HasIndex("SummonerCardsId");

                    b.ToTable("AbilityCard");
                });

            modelBuilder.Entity("CardBattle.DataModels.Ability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SummonerStatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SummonerStatId");

                    b.ToTable("Abilities");
                });

            modelBuilder.Entity("CardBattle.DataModels.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rarity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("CardBattle.DataModels.CardStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<int>("Ranged")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("CardStats");
                });

            modelBuilder.Entity("CardBattle.DataModels.CardStatsAbility", b =>
                {
                    b.Property<int>("CardStatsId")
                        .HasColumnType("int");

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.HasKey("CardStatsId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("CardStatsAbilities");
                });

            modelBuilder.Entity("CardBattle.DataModels.PtrOptionAbility", b =>
                {
                    b.Property<int>("PtrOptionId")
                        .HasColumnType("int");

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.HasKey("PtrOptionId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("PtrOptionAbility");
                });

            modelBuilder.Entity("CardBattle.DataModels.PtrOptions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId")
                        .IsUnique();

                    b.ToTable("PtrOptions");
                });

            modelBuilder.Entity("CardBattle.DataModels.StatBuff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int?>("PtrOptionsId")
                        .HasColumnType("int");

                    b.Property<int>("Ranged")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<int>("SummonerStatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PtrOptionsId");

                    b.HasIndex("SummonerStatId");

                    b.ToTable("StatBuff");
                });

            modelBuilder.Entity("CardBattle.DataModels.SummonerStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Armor")
                        .HasColumnType("int");

                    b.Property<int>("Attack")
                        .HasColumnType("int");

                    b.Property<int>("CardId")
                        .HasColumnType("int");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("Magic")
                        .HasColumnType("int");

                    b.Property<int>("Mana")
                        .HasColumnType("int");

                    b.Property<int>("Ranged")
                        .HasColumnType("int");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("SummonerStats");
                });

            modelBuilder.Entity("CardBattle.DataModels.SummonerStatAbility", b =>
                {
                    b.Property<int>("SummonerStatId")
                        .HasColumnType("int");

                    b.Property<int>("AbilityId")
                        .HasColumnType("int");

                    b.HasKey("SummonerStatId", "AbilityId");

                    b.HasIndex("AbilityId");

                    b.ToTable("SummonerStatAbilities");
                });

            modelBuilder.Entity("AbilityCard", b =>
                {
                    b.HasOne("CardBattle.DataModels.Ability", null)
                        .WithMany()
                        .HasForeignKey("SummonerAbilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardBattle.DataModels.Card", null)
                        .WithMany()
                        .HasForeignKey("SummonerCardsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CardBattle.DataModels.Ability", b =>
                {
                    b.HasOne("CardBattle.DataModels.SummonerStat", null)
                        .WithMany("ActiveSummonerAbilities")
                        .HasForeignKey("SummonerStatId");
                });

            modelBuilder.Entity("CardBattle.DataModels.CardStats", b =>
                {
                    b.HasOne("CardBattle.DataModels.Card", "Card")
                        .WithMany("CardStats")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("CardBattle.DataModels.CardStatsAbility", b =>
                {
                    b.HasOne("CardBattle.DataModels.Ability", "Ability")
                        .WithMany("CardStatsAbilities")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardBattle.DataModels.CardStats", "CardStats")
                        .WithMany("CardStatsAbilities")
                        .HasForeignKey("CardStatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("CardStats");
                });

            modelBuilder.Entity("CardBattle.DataModels.PtrOptionAbility", b =>
                {
                    b.HasOne("CardBattle.DataModels.Ability", "Ability")
                        .WithMany("PtrOptionAbilities")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardBattle.DataModels.PtrOptions", "PtrOptions")
                        .WithMany("PtrOptionAbilities")
                        .HasForeignKey("PtrOptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("PtrOptions");
                });

            modelBuilder.Entity("CardBattle.DataModels.PtrOptions", b =>
                {
                    b.HasOne("CardBattle.DataModels.Card", "Card")
                        .WithOne("PtrOptions")
                        .HasForeignKey("CardBattle.DataModels.PtrOptions", "CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("CardBattle.DataModels.StatBuff", b =>
                {
                    b.HasOne("CardBattle.DataModels.PtrOptions", null)
                        .WithMany("StatBuffs")
                        .HasForeignKey("PtrOptionsId");

                    b.HasOne("CardBattle.DataModels.SummonerStat", "SummonerStat")
                        .WithMany("StatBuffs")
                        .HasForeignKey("SummonerStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SummonerStat");
                });

            modelBuilder.Entity("CardBattle.DataModels.SummonerStat", b =>
                {
                    b.HasOne("CardBattle.DataModels.Card", "Card")
                        .WithMany("SummonerStats")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("CardBattle.DataModels.SummonerStatAbility", b =>
                {
                    b.HasOne("CardBattle.DataModels.Ability", "Ability")
                        .WithMany("SummonerStatAbilities")
                        .HasForeignKey("AbilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CardBattle.DataModels.SummonerStat", "SummonerStat")
                        .WithMany("SummonerStatAbilities")
                        .HasForeignKey("SummonerStatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ability");

                    b.Navigation("SummonerStat");
                });

            modelBuilder.Entity("CardBattle.DataModels.Ability", b =>
                {
                    b.Navigation("CardStatsAbilities");

                    b.Navigation("PtrOptionAbilities");

                    b.Navigation("SummonerStatAbilities");
                });

            modelBuilder.Entity("CardBattle.DataModels.Card", b =>
                {
                    b.Navigation("CardStats");

                    b.Navigation("PtrOptions");

                    b.Navigation("SummonerStats");
                });

            modelBuilder.Entity("CardBattle.DataModels.CardStats", b =>
                {
                    b.Navigation("CardStatsAbilities");
                });

            modelBuilder.Entity("CardBattle.DataModels.PtrOptions", b =>
                {
                    b.Navigation("PtrOptionAbilities");

                    b.Navigation("StatBuffs");
                });

            modelBuilder.Entity("CardBattle.DataModels.SummonerStat", b =>
                {
                    b.Navigation("ActiveSummonerAbilities");

                    b.Navigation("StatBuffs");

                    b.Navigation("SummonerStatAbilities");
                });
#pragma warning restore 612, 618
        }
    }
}
